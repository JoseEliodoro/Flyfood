classe DateInput():
    metodo_construtor(url :Caractere)
    inicio
        parametro.url <- url
    fimmetodo
    metodo read_file(url:Caractere):
    var
        line :Vetor
    inicio 
        abrir(parametro.url, 'r') chame obj:
            line <- obj.readlines()
        retorne line
    fimmetodo
    metodo create_router(text :Caractere):
    var
        x, y :Inteiro
        position, line, ln :Vetor
    inicio
        x <- 0
        para (line cada item text) faca
            ln <- line.replace('\n', '').split(' ')
            para (y de 0 ate sizeof(ln) passo 1) faca
                se ln[y] != '0' entao 
                    position.acrescentar(House(x, y, ln[y]))
                fimse
            fimpara
            x <- x + 1
        fimpara
        return position
    fimmetodo
fimclasse

A complexidade temporal desta função é O(n^2) onde n é o número de linhas no arquivo de entrada. Há dois loops aninhados nas linhas 20-28, o loop externo roda n vezes, onde n é o número de linhas no arquivo de entrada, e o loop interno roda m vezes, onde m é o número de elementos em uma linha. Cada iteração do loop interno leva um tempo constante para realizar as operações nas linhas 23-24, então a complexidade temporal geral é O(n*m) que pode ser simplificada para O(n^2) se n é aproximadamente igual a m.